name: Clippy

on:
  pull_request:
    branches:
      - main
    paths:
      - "src/**.rs"
      - "crates/**.rs"
  push:
    branches:
      - main
    paths:
      - "src/**.rs"
      - "crates/**.rs"
      - ".github/workflows/clippy.yml"

env:
  CARGO_TERM_COLOR: always
  CLICOLOR: 1

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    permissions:
      # Required to upload the results
      security-events: write
    steps:
      # Install required libraries
      - name: Libraries
        if: runner.os == 'linux'
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
      # Get the nightly toolchain
      - name: Toolchain
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: nightly
          components: clippy
      # Install clippy-sarif and sarif-fmt
      - name: Install Sarif
        uses: taiki-e/install-action@e7e3978ba00920884c8a5790a28699b85397e972 # v2
        with:
          tool: clippy-sarif,sarif-fmt
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      # Restore/Setup the cache
      - name: Cache
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2
      # Run the clippy tool
      - name: Run Clippy
        run: >
          cargo clippy --workspace --all-targets -- -D warnings
          | clippy-sarif
          | tee clippy-results.sarif
          | sarif-fmt
        continue-on-error: true
      # Upload the results
      - name: Upload Results
        uses: github/codeql-action/upload-sarif@8f596b4ae3cb3c588a5c46780b86dd53fef16c52 # v3
        with:
          sarif_file: clippy-results.sarif
          wait-for-processing: true
      # Print the results
      - name: Report Results
        run: cargo clippy --workspace --all-features --all-targets
