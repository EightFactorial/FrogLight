//! Generated tests for [`V1_21_2`].
//!
//! @generated by 'TODO'
#![allow(clippy::wildcard_imports)]
use std::any::TypeId;

use bevy::MinimalPlugins;
use bevy_app::App;
use froglight_protocol::versions::v1_21_2::V1_21_2;

use crate::{block::*, BlockPlugin, BlockStorageArc};

#[test]
#[expect(clippy::too_many_lines)]
fn generated() {
    let mut app = App::new();
    app.add_plugins(MinimalPlugins);
    app.add_plugins(BlockPlugin);
    app.finish();

    // Retrieve the block storage.
    let storage = app.world().resource::<BlockStorageArc<V1_21_2>>();
    let storage = storage.read();

    if let Some(block) = storage.get_stored_default(4902u32) {
        assert_eq!(block.resource_key(), "minecraft:pale_oak_wall_sign");
        assert_eq!(block.type_id(), TypeId::of::<PaleOakWallSign>());

        let downcast = block.as_any().downcast_ref::<PaleOakWallSign>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(4903u32));
    }
    if let Some(block) = storage.get_stored_default(27151u32) {
        assert_eq!(block.resource_key(), "minecraft:heavy_core");
        assert_eq!(block.type_id(), TypeId::of::<HeavyCore>());

        let downcast = block.as_any().downcast_ref::<HeavyCore>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(27152u32));
    }
    if let Some(block) = storage.get_stored_default(6768u32) {
        assert_eq!(block.resource_key(), "minecraft:mossy_stone_bricks");
        assert_eq!(block.type_id(), TypeId::of::<MossyStoneBricks>());

        let downcast = block.as_any().downcast_ref::<MossyStoneBricks>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(6768u32));
    }
    if let Some(block) = storage.get_stored_default(39u32) {
        assert_eq!(block.resource_key(), "minecraft:cherry_sapling");
        assert_eq!(block.type_id(), TypeId::of::<CherrySapling>());

        let downcast = block.as_any().downcast_ref::<CherrySapling>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(39u32));
    }
    if let Some(block) = storage.get_stored_default(13322u32) {
        assert_eq!(block.resource_key(), "minecraft:dead_tube_coral_wall_fan");
        assert_eq!(block.type_id(), TypeId::of::<DeadTubeCoralWallFan>());

        let downcast = block.as_any().downcast_ref::<DeadTubeCoralWallFan>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(13322u32));
    }
    if let Some(block) = storage.get_stored_default(10075u32) {
        assert_eq!(block.resource_key(), "minecraft:red_stained_glass_pane");
        assert_eq!(block.type_id(), TypeId::of::<RedStainedGlassPane>());

        let downcast = block.as_any().downcast_ref::<RedStainedGlassPane>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(10106u32));
    }
    if let Some(block) = storage.get_stored_default(13302u32) {
        assert_eq!(block.resource_key(), "minecraft:dead_tube_coral_fan");
        assert_eq!(block.type_id(), TypeId::of::<DeadTubeCoralFan>());

        let downcast = block.as_any().downcast_ref::<DeadTubeCoralFan>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(13302u32));
    }
    if let Some(block) = storage.get_stored_default(6447u32) {
        assert_eq!(block.resource_key(), "minecraft:cherry_trapdoor");
        assert_eq!(block.type_id(), TypeId::of::<CherryTrapdoor>());

        let downcast = block.as_any().downcast_ref::<CherryTrapdoor>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(6462u32));
    }
    if let Some(block) = storage.get_stored_default(11318u32) {
        assert_eq!(block.resource_key(), "minecraft:red_banner");
        assert_eq!(block.type_id(), TypeId::of::<RedBanner>());

        let downcast = block.as_any().downcast_ref::<RedBanner>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(11318u32));
    }
    if let Some(block) = storage.get_stored_default(25377u32) {
        assert_eq!(block.resource_key(), "minecraft:cobbled_deepslate_stairs");
        assert_eq!(block.type_id(), TypeId::of::<CobbledDeepslateStairs>());

        let downcast = block.as_any().downcast_ref::<CobbledDeepslateStairs>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(25388u32));
    }
    if let Some(block) = storage.get_stored_default(168u32) {
        assert_eq!(block.resource_key(), "minecraft:bamboo_block");
        assert_eq!(block.type_id(), TypeId::of::<BambooBlock>());

        let downcast = block.as_any().downcast_ref::<BambooBlock>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(169u32));
    }
    if let Some(block) = storage.get_stored_default(177u32) {
        assert_eq!(block.resource_key(), "minecraft:stripped_jungle_log");
        assert_eq!(block.type_id(), TypeId::of::<StrippedJungleLog>());

        let downcast = block.as_any().downcast_ref::<StrippedJungleLog>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(178u32));
    }
    if let Some(block) = storage.get_stored_default(11649u32) {
        assert_eq!(block.resource_key(), "minecraft:smooth_quartz");
        assert_eq!(block.type_id(), TypeId::of::<SmoothQuartz>());

        let downcast = block.as_any().downcast_ref::<SmoothQuartz>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(11649u32));
    }
    if let Some(block) = storage.get_stored_default(14581u32) {
        assert_eq!(block.resource_key(), "minecraft:end_stone_brick_slab");
        assert_eq!(block.type_id(), TypeId::of::<EndStoneBrickSlab>());

        let downcast = block.as_any().downcast_ref::<EndStoneBrickSlab>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(14584u32));
    }
    if let Some(block) = storage.get_stored_default(2049u32) {
        assert_eq!(block.resource_key(), "minecraft:fern");
        assert_eq!(block.type_id(), TypeId::of::<Fern>());

        let downcast = block.as_any().downcast_ref::<Fern>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(2049u32));
    }
    if let Some(block) = storage.get_stored_default(22884u32) {
        assert_eq!(block.resource_key(), "minecraft:calibrated_sculk_sensor");
        assert_eq!(block.type_id(), TypeId::of::<CalibratedSculkSensor>());

        let downcast = block.as_any().downcast_ref::<CalibratedSculkSensor>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(22885u32));
    }
    if let Some(block) = storage.get_stored_default(6768u32) {
        assert_eq!(block.resource_key(), "minecraft:mossy_stone_bricks");
        assert_eq!(block.type_id(), TypeId::of::<MossyStoneBricks>());

        let downcast = block.as_any().downcast_ref::<MossyStoneBricks>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(6768u32));
    }
    if let Some(block) = storage.get_stored_default(19133u32) {
        assert_eq!(block.resource_key(), "minecraft:twisting_vines_plant");
        assert_eq!(block.type_id(), TypeId::of::<TwistingVinesPlant>());

        let downcast = block.as_any().downcast_ref::<TwistingVinesPlant>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(19133u32));
    }
    if let Some(block) = storage.get_stored_default(14629u32) {
        assert_eq!(block.resource_key(), "minecraft:brick_wall");
        assert_eq!(block.type_id(), TypeId::of::<BrickWall>());

        let downcast = block.as_any().downcast_ref::<BrickWall>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(14632u32));
    }
    if let Some(block) = storage.get_stored_default(4346u32) {
        assert_eq!(block.resource_key(), "minecraft:furnace");
        assert_eq!(block.type_id(), TypeId::of::<Furnace>());

        let downcast = block.as_any().downcast_ref::<Furnace>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(4347u32));
    }
    if let Some(block) = storage.get_stored_default(10702u32) {
        assert_eq!(block.resource_key(), "minecraft:light");
        assert_eq!(block.type_id(), TypeId::of::<Light>());

        let downcast = block.as_any().downcast_ref::<Light>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(10733u32));
    }
    if let Some(block) = storage.get_stored_default(10075u32) {
        assert_eq!(block.resource_key(), "minecraft:red_stained_glass_pane");
        assert_eq!(block.type_id(), TypeId::of::<RedStainedGlassPane>());

        let downcast = block.as_any().downcast_ref::<RedStainedGlassPane>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(10106u32));
    }
    if let Some(block) = storage.get_stored_default(2131u32) {
        assert_eq!(block.resource_key(), "minecraft:lily_of_the_valley");
        assert_eq!(block.type_id(), TypeId::of::<LilyOfTheValley>());

        let downcast = block.as_any().downcast_ref::<LilyOfTheValley>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(2131u32));
    }
    if let Some(block) = storage.get_stored_default(21551u32) {
        assert_eq!(block.resource_key(), "minecraft:tuff_slab");
        assert_eq!(block.type_id(), TypeId::of::<TuffSlab>());

        let downcast = block.as_any().downcast_ref::<TuffSlab>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(21554u32));
    }
    if let Some(block) = storage.get_stored_default(9659u32) {
        assert_eq!(block.resource_key(), "minecraft:orange_stained_glass_pane");
        assert_eq!(block.type_id(), TypeId::of::<OrangeStainedGlassPane>());

        let downcast = block.as_any().downcast_ref::<OrangeStainedGlassPane>().unwrap();
        assert_eq!(storage.get_block_id(downcast), Some(9690u32));
    }

}