[package]
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
name = "froglight-brigadier"
readme = { workspace = true }
repository = { workspace = true }
version = { workspace = true }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints]
workspace = true

[dev-dependencies]
bevy = { workspace = true, features = ["bevy_log"] }
proptest = { workspace = true }

[dependencies]
bevy_app = { workspace = true, features = ["reflect_functions"] }
bevy_ecs = { workspace = true, features = ["reflect_functions"] }
bevy_log = { workspace = true }
bevy_platform = { workspace = true }
bevy_reflect = { workspace = true, features = ["functions", "petgraph", "smol_str"] }
derive_more = { workspace = true }
froglight-common = { workspace = true, features = ["bevy"] }
hashbrown = { workspace = true }
parking_lot = { workspace = true }
petgraph = "0.7"
smol_str = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }

# Optional dependencies
froglight-io = { workspace = true, optional = true }
froglight-nbt = { workspace = true, optional = true, features = ["bevy"] }
glam = { workspace = true, optional = true }
serde = { workspace = true, optional = true }
uuid = { workspace = true, optional = true }

[features]
default = ["glam", "nbt", "uuid"]

# Enable `froglight-io` support.
io = ["dep:froglight-io"]

# Enable support for `glam` types.
glam = ["bevy_reflect/glam", "dep:glam"]
# Enable support for `froglight-nbt` types.
nbt = ["dep:froglight-nbt"]
# Enable support for `uuid` types.
uuid = ["bevy_reflect/uuid", "dep:uuid"]

# Enable support for serializing to/from text formats.
serde = ["bevy_platform/serialize", "dep:serde", "glam?/serde", "smol_str/serde", "uuid?/serde"]
