[package]
name = "froglight-common"
version = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
authors = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
readme = { workspace = true }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints]
workspace = true

[dependencies]
compact_str = { workspace = true }
derive_more = { workspace = true }
glam = { workspace = true }
thiserror = { workspace = true }
uuid = { workspace = true }

# Optional bevy dependencies
bevy_ecs = { workspace = true, optional = true }
bevy-inspector-egui = { workspace = true, optional = true }
bevy_reflect = { workspace = true, optional = true }

# Optional dependencies
hashbrown = { workspace = true, optional = true }
serde = { workspace = true, optional = true, features = ["derive"] }

# Enable x11 on linux, prevents compilation errors
[target.'cfg(target_os = "linux")'.dependencies]
bevy_winit = { workspace = true, features = ["x11"] }

[features]
default = ["bevy"]

# Derives `Component`, `Resource`, and `Reflect` for some types
bevy = ["dep:bevy_ecs", "dep:bevy_reflect", "hashbrown", "serde"]

# Implement `Equivalent` for ResourceKey
hashbrown = ["dep:hashbrown"]

# Implement `InspectorPrimitive` for ResourceKey
inspector = ["dep:bevy-inspector-egui", "bevy"]

# Derives `Serialize` and `Deserialize` for some types
serde = ["dep:serde", "compact_str/serde", "uuid/serde"]
