[package]
name = "froglight-internal"
version = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
authors = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
readme = { workspace = true }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints]
workspace = true

[dev-dependencies]
bevy_mod_debugdump = "0.11.0"
serde_json = { workspace = true }

[dependencies]
bevy = { workspace = true, optional = true, features = ["multi_threaded"] }
froglight-block = { version = "0.1.0", path = "../froglight-block" }
froglight-common = { version = "0.1.0", path = "../froglight-common" }
froglight-entity = { version = "0.1.0", path = "../froglight-entity" }
froglight-network = { version = "0.1.0", path = "../froglight-network" }
froglight-physics = { version = "0.1.0", path = "../froglight-physics" }
froglight-protocol = { version = "0.1.0", path = "../froglight-protocol" }
froglight-registry = { version = "0.1.0", path = "../froglight-registry" }
froglight-utils = { version = "0.1.0", path = "../froglight-utils" }
froglight-world = { version = "0.1.0", path = "../froglight-world" }

# Client dependencies
bevy_rand = { workspace = true, optional = true }
bevy_prng = { workspace = true, optional = true, features = ["wyrand"] }
froglight-asset = { version = "0.1.0", path = "../froglight-asset", optional = true }
froglight-interface = { version = "0.1.0", path = "../froglight-interface", optional = true }
froglight-model = { version = "0.1.0", path = "../froglight-model", optional = true }
froglight-render = { version = "0.1.0", path = "../froglight-render", optional = true }


[features]
default = ["presets"]

# Enables preset plugin groups
presets = ["dep:bevy"]

# Enables extra crates used by clients
client = [
    "bevy/default",
    "bevy/wayland",
    "presets",
    "dep:bevy_rand",
    "dep:bevy_prng",
    "dep:froglight-asset",
    "dep:froglight-interface",
    "dep:froglight-model",
    "dep:froglight-render",
]

# Enables egui inspector trait implementations
inspector = ["froglight-common/inspector"]

# Generate graphs used for visualizing systems
[[example]]
name = "system-graph"
path = "examples/system-graph/main.rs"
required-features = ["client"]
