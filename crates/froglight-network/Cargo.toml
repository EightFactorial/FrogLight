[package]
name = "froglight-network"
version = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
authors = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
readme = { workspace = true }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints]
workspace = true

[dependencies]
async-channel = "2.3.1"
async-compression = { version = "0.4.11", default-features = false, features = [
    "futures-io",
    "zlib",
] }
async-std = { workspace = true, features = ["std", "unstable"] }
compact_str = { workspace = true }
froglight-protocol = { version = "0.1.0", path = "../froglight-protocol" }
futures-lite = { workspace = true }
md-5 = "0.10.6"
parking_lot = { workspace = true }
thiserror = { workspace = true }
uuid = { workspace = true, features = ["v3"] }

# Optional bevy dependencies
bevy_app = { workspace = true, optional = true }
bevy_derive = { workspace = true, optional = true }
bevy_ecs = { workspace = true, optional = true }
bevy_hierarchy = { workspace = true, optional = true }
bevy_log = { workspace = true, optional = true }
bevy_reflect = { workspace = true, optional = true }
bevy_tasks = { workspace = true, optional = true, features = [
    "multi-threaded",
] }

# Optional dependencies
async-std-resolver = { version = "0.24.1", optional = true }
serde_json = { workspace = true, optional = true }

[features]
default = ["bevy", "resolver"]

# Enables Bevy integration
bevy = [
    "dep:bevy_app",
    "dep:bevy_derive",
    "dep:bevy_ecs",
    "dep:bevy_hierarchy",
    "dep:bevy_log",
    "dep:bevy_reflect",
    "dep:bevy_tasks",
    "dep:serde_json",
    "froglight-protocol/bevy",
]

# Enables the ResolverPlugin
resolver = ["bevy", "dep:async-std-resolver"]
