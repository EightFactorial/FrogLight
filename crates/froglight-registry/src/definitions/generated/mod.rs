//! Generated registries
//!
//! Template: 1.21.0
//!
//! @generated by `froglight-generator` #cd8324b

mod activity;
pub use activity::*;

mod armor_material;
pub use armor_material::*;

mod attribute;
pub use attribute::*;

mod block;
pub use block::*;

mod block_entity_type;
pub use block_entity_type::*;

mod block_predicate_type;
pub use block_predicate_type::*;

mod block_type;
pub use block_type::*;

mod cat_variant;
pub use cat_variant::*;

mod chunk_status;
pub use chunk_status::*;

mod command_argument_type;
pub use command_argument_type::*;

mod creative_mode_tab;
pub use creative_mode_tab::*;

mod custom_stat;
pub use custom_stat::*;

mod data_component_type;
pub use data_component_type::*;

mod decorated_pot_pattern;
pub use decorated_pot_pattern::*;

mod enchantment_effect_component_type;
pub use enchantment_effect_component_type::*;

mod enchantment_entity_effect_type;
pub use enchantment_entity_effect_type::*;

mod enchantment_level_based_value_type;
pub use enchantment_level_based_value_type::*;

mod enchantment_location_based_effect_type;
pub use enchantment_location_based_effect_type::*;

mod enchantment_provider_type;
pub use enchantment_provider_type::*;

mod enchantment_value_effect_type;
pub use enchantment_value_effect_type::*;

mod entity_sub_predicate_type;
pub use entity_sub_predicate_type::*;

mod entity_type;
pub use entity_type::*;

mod float_provider_type;
pub use float_provider_type::*;

mod fluid;
pub use fluid::*;

mod frog_variant;
pub use frog_variant::*;

mod game_event;
pub use game_event::*;

mod height_provider_type;
pub use height_provider_type::*;

mod instrument;
pub use instrument::*;

mod int_provider_type;
pub use int_provider_type::*;

mod item;
pub use item::*;

mod item_sub_predicate_type;
pub use item_sub_predicate_type::*;

mod loot_condition_type;
pub use loot_condition_type::*;

mod loot_function_type;
pub use loot_function_type::*;

mod loot_nbt_provider_type;
pub use loot_nbt_provider_type::*;

mod loot_number_provider_type;
pub use loot_number_provider_type::*;

mod loot_pool_entry_type;
pub use loot_pool_entry_type::*;

mod loot_score_provider_type;
pub use loot_score_provider_type::*;

mod map_decoration_type;
pub use map_decoration_type::*;

mod memory_module_type;
pub use memory_module_type::*;

mod menu;
pub use menu::*;

mod mob_effect;
pub use mob_effect::*;

mod number_format_type;
pub use number_format_type::*;

mod particle_type;
pub use particle_type::*;

mod point_of_interest_type;
pub use point_of_interest_type::*;

mod pos_rule_test;
pub use pos_rule_test::*;

mod position_source_type;
pub use position_source_type::*;

mod potion;
pub use potion::*;

mod recipe_serializer;
pub use recipe_serializer::*;

mod recipe_type;
pub use recipe_type::*;

mod rule_block_entity_modifier;
pub use rule_block_entity_modifier::*;

mod rule_test;
pub use rule_test::*;

mod schedule;
pub use schedule::*;

mod sensor_type;
pub use sensor_type::*;

mod sound_event;
pub use sound_event::*;

mod stat_type;
pub use stat_type::*;

mod trigger_type;
pub use trigger_type::*;

mod villager_profession;
pub use villager_profession::*;

mod villager_type;
pub use villager_type::*;

mod worldgen_biome_source;
pub use worldgen_biome_source::*;

mod worldgen_block_state_provider_type;
pub use worldgen_block_state_provider_type::*;

mod worldgen_carver;
pub use worldgen_carver::*;

mod worldgen_chunk_generator;
pub use worldgen_chunk_generator::*;

mod worldgen_density_function_type;
pub use worldgen_density_function_type::*;

mod worldgen_feature;
pub use worldgen_feature::*;

mod worldgen_feature_size_type;
pub use worldgen_feature_size_type::*;

mod worldgen_foliage_placer_type;
pub use worldgen_foliage_placer_type::*;

mod worldgen_material_condition;
pub use worldgen_material_condition::*;

mod worldgen_material_rule;
pub use worldgen_material_rule::*;

mod worldgen_placement_modifier_type;
pub use worldgen_placement_modifier_type::*;

mod worldgen_pool_alias_binding;
pub use worldgen_pool_alias_binding::*;

mod worldgen_root_placer_type;
pub use worldgen_root_placer_type::*;

mod worldgen_structure_piece;
pub use worldgen_structure_piece::*;

mod worldgen_structure_placement;
pub use worldgen_structure_placement::*;

mod worldgen_structure_pool_element;
pub use worldgen_structure_pool_element::*;

mod worldgen_structure_processor;
pub use worldgen_structure_processor::*;

mod worldgen_structure_type;
pub use worldgen_structure_type::*;

mod worldgen_tree_decorator_type;
pub use worldgen_tree_decorator_type::*;

mod worldgen_trunk_placer_type;
pub use worldgen_trunk_placer_type::*;

#[doc(hidden)]
pub(super) fn build(app: &mut bevy_app::App) {
    app.register_type::<ActivityKey>();
    app.register_type::<ArmorMaterialKey>();
    app.register_type::<AttributeKey>();
    app.register_type::<BlockKey>();
    app.register_type::<BlockEntityTypeKey>();
    app.register_type::<BlockPredicateTypeKey>();
    app.register_type::<BlockTypeKey>();
    app.register_type::<CatVariantKey>();
    app.register_type::<ChunkStatusKey>();
    app.register_type::<CommandArgumentTypeKey>();
    app.register_type::<CreativeModeTabKey>();
    app.register_type::<CustomStatKey>();
    app.register_type::<DataComponentTypeKey>();
    app.register_type::<DecoratedPotPatternKey>();
    app.register_type::<EnchantmentEffectComponentTypeKey>();
    app.register_type::<EnchantmentEntityEffectTypeKey>();
    app.register_type::<EnchantmentLevelBasedValueTypeKey>();
    app.register_type::<EnchantmentLocationBasedEffectTypeKey>();
    app.register_type::<EnchantmentProviderTypeKey>();
    app.register_type::<EnchantmentValueEffectTypeKey>();
    app.register_type::<EntitySubPredicateTypeKey>();
    app.register_type::<EntityTypeKey>();
    app.register_type::<FloatProviderTypeKey>();
    app.register_type::<FluidKey>();
    app.register_type::<FrogVariantKey>();
    app.register_type::<GameEventKey>();
    app.register_type::<HeightProviderTypeKey>();
    app.register_type::<InstrumentKey>();
    app.register_type::<IntProviderTypeKey>();
    app.register_type::<ItemKey>();
    app.register_type::<ItemSubPredicateTypeKey>();
    app.register_type::<LootConditionTypeKey>();
    app.register_type::<LootFunctionTypeKey>();
    app.register_type::<LootNbtProviderTypeKey>();
    app.register_type::<LootNumberProviderTypeKey>();
    app.register_type::<LootPoolEntryTypeKey>();
    app.register_type::<LootScoreProviderTypeKey>();
    app.register_type::<MapDecorationTypeKey>();
    app.register_type::<MemoryModuleTypeKey>();
    app.register_type::<MenuKey>();
    app.register_type::<MobEffectKey>();
    app.register_type::<NumberFormatTypeKey>();
    app.register_type::<ParticleTypeKey>();
    app.register_type::<PointOfInterestTypeKey>();
    app.register_type::<PosRuleTestKey>();
    app.register_type::<PositionSourceTypeKey>();
    app.register_type::<PotionKey>();
    app.register_type::<RecipeSerializerKey>();
    app.register_type::<RecipeTypeKey>();
    app.register_type::<RuleBlockEntityModifierKey>();
    app.register_type::<RuleTestKey>();
    app.register_type::<ScheduleKey>();
    app.register_type::<SensorTypeKey>();
    app.register_type::<SoundEventKey>();
    app.register_type::<StatTypeKey>();
    app.register_type::<TriggerTypeKey>();
    app.register_type::<VillagerProfessionKey>();
    app.register_type::<VillagerTypeKey>();
    app.register_type::<WorldgenBiomeSourceKey>();
    app.register_type::<WorldgenBlockStateProviderTypeKey>();
    app.register_type::<WorldgenCarverKey>();
    app.register_type::<WorldgenChunkGeneratorKey>();
    app.register_type::<WorldgenDensityFunctionTypeKey>();
    app.register_type::<WorldgenFeatureKey>();
    app.register_type::<WorldgenFeatureSizeTypeKey>();
    app.register_type::<WorldgenFoliagePlacerTypeKey>();
    app.register_type::<WorldgenMaterialConditionKey>();
    app.register_type::<WorldgenMaterialRuleKey>();
    app.register_type::<WorldgenPlacementModifierTypeKey>();
    app.register_type::<WorldgenPoolAliasBindingKey>();
    app.register_type::<WorldgenRootPlacerTypeKey>();
    app.register_type::<WorldgenStructurePieceKey>();
    app.register_type::<WorldgenStructurePlacementKey>();
    app.register_type::<WorldgenStructurePoolElementKey>();
    app.register_type::<WorldgenStructureProcessorKey>();
    app.register_type::<WorldgenStructureTypeKey>();
    app.register_type::<WorldgenTreeDecoratorTypeKey>();
    app.register_type::<WorldgenTrunkPlacerTypeKey>();
}
