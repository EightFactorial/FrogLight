//! @generated by `froglight-generator` #cd8324b

use bevy_reflect::Reflect;
use froglight_macros::FrogRegistry;

#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, Reflect, FrogRegistry)]
pub enum TriggerTypeKey {
    #[frog(key = "minecraft:impossible")]
    Impossible,
    #[frog(key = "minecraft:player_killed_entity")]
    PlayerKilledEntity,
    #[frog(key = "minecraft:entity_killed_player")]
    EntityKilledPlayer,
    #[frog(key = "minecraft:enter_block")]
    EnterBlock,
    #[frog(key = "minecraft:inventory_changed")]
    InventoryChanged,
    #[frog(key = "minecraft:recipe_unlocked")]
    RecipeUnlocked,
    #[frog(key = "minecraft:player_hurt_entity")]
    PlayerHurtEntity,
    #[frog(key = "minecraft:entity_hurt_player")]
    EntityHurtPlayer,
    #[frog(key = "minecraft:enchanted_item")]
    EnchantedItem,
    #[frog(key = "minecraft:filled_bucket")]
    FilledBucket,
    #[frog(key = "minecraft:brewed_potion")]
    BrewedPotion,
    #[frog(key = "minecraft:construct_beacon")]
    ConstructBeacon,
    #[frog(key = "minecraft:used_ender_eye")]
    UsedEnderEye,
    #[frog(key = "minecraft:summoned_entity")]
    SummonedEntity,
    #[frog(key = "minecraft:bred_animals")]
    BredAnimals,
    #[frog(key = "minecraft:location")]
    Location,
    #[frog(key = "minecraft:slept_in_bed")]
    SleptInBed,
    #[frog(key = "minecraft:cured_zombie_villager")]
    CuredZombieVillager,
    #[frog(key = "minecraft:villager_trade")]
    VillagerTrade,
    #[frog(key = "minecraft:item_durability_changed")]
    ItemDurabilityChanged,
    #[frog(key = "minecraft:levitation")]
    Levitation,
    #[frog(key = "minecraft:changed_dimension")]
    ChangedDimension,
    #[frog(key = "minecraft:tick")]
    Tick,
    #[frog(key = "minecraft:tame_animal")]
    TameAnimal,
    #[frog(key = "minecraft:placed_block")]
    PlacedBlock,
    #[frog(key = "minecraft:consume_item")]
    ConsumeItem,
    #[frog(key = "minecraft:effects_changed")]
    EffectsChanged,
    #[frog(key = "minecraft:used_totem")]
    UsedTotem,
    #[frog(key = "minecraft:nether_travel")]
    NetherTravel,
    #[frog(key = "minecraft:fishing_rod_hooked")]
    FishingRodHooked,
    #[frog(key = "minecraft:channeled_lightning")]
    ChanneledLightning,
    #[frog(key = "minecraft:shot_crossbow")]
    ShotCrossbow,
    #[frog(key = "minecraft:killed_by_crossbow")]
    KilledByCrossbow,
    #[frog(key = "minecraft:hero_of_the_village")]
    HeroOfTheVillage,
    #[frog(key = "minecraft:voluntary_exile")]
    VoluntaryExile,
    #[frog(key = "minecraft:slide_down_block")]
    SlideDownBlock,
    #[frog(key = "minecraft:bee_nest_destroyed")]
    BeeNestDestroyed,
    #[frog(key = "minecraft:target_hit")]
    TargetHit,
    #[frog(key = "minecraft:item_used_on_block")]
    ItemUsedOnBlock,
    #[frog(key = "minecraft:default_block_use")]
    DefaultBlockUse,
    #[frog(key = "minecraft:any_block_use")]
    AnyBlockUse,
    #[frog(key = "minecraft:player_generates_container_loot")]
    PlayerGeneratesContainerLoot,
    #[frog(key = "minecraft:thrown_item_picked_up_by_entity")]
    ThrownItemPickedUpByEntity,
    #[frog(key = "minecraft:thrown_item_picked_up_by_player")]
    ThrownItemPickedUpByPlayer,
    #[frog(key = "minecraft:player_interacted_with_entity")]
    PlayerInteractedWithEntity,
    #[frog(key = "minecraft:started_riding")]
    StartedRiding,
    #[frog(key = "minecraft:lightning_strike")]
    LightningStrike,
    #[frog(key = "minecraft:using_item")]
    UsingItem,
    #[frog(key = "minecraft:fall_from_height")]
    FallFromHeight,
    #[frog(key = "minecraft:ride_entity_in_lava")]
    RideEntityInLava,
    #[frog(key = "minecraft:kill_mob_near_sculk_catalyst")]
    KillMobNearSculkCatalyst,
    #[frog(key = "minecraft:allay_drop_item_on_block")]
    AllayDropItemOnBlock,
    #[frog(key = "minecraft:avoid_vibration")]
    AvoidVibration,
    #[frog(key = "minecraft:recipe_crafted")]
    RecipeCrafted,
    #[frog(key = "minecraft:crafter_recipe_crafted")]
    CrafterRecipeCrafted,
    #[frog(key = "minecraft:fall_after_explosion")]
    FallAfterExplosion,
}
