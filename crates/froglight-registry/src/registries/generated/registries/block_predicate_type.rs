//! @generated by `froglight-generator` #248246d

use bevy_reflect::Reflect;
use froglight_macros::FrogRegistry;

#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, Reflect, FrogRegistry)]
pub enum BlockPredicateTypeKey {
    #[frog(key = "minecraft:matching_blocks")]
    MatchingBlocks,
    #[frog(key = "minecraft:matching_block_tag")]
    MatchingBlockTag,
    #[frog(key = "minecraft:matching_fluids")]
    MatchingFluids,
    #[frog(key = "minecraft:has_sturdy_face")]
    HasSturdyFace,
    #[frog(key = "minecraft:solid")]
    Solid,
    #[frog(key = "minecraft:replaceable")]
    Replaceable,
    #[frog(key = "minecraft:would_survive")]
    WouldSurvive,
    #[frog(key = "minecraft:inside_world_bounds")]
    InsideWorldBounds,
    #[frog(key = "minecraft:any_of")]
    AnyOf,
    #[frog(key = "minecraft:all_of")]
    AllOf,
    #[frog(key = "minecraft:not")]
    Not,
    #[frog(key = "minecraft:true")]
    True,
    #[frog(key = "minecraft:unobstructed")]
    Unobstructed,
}
