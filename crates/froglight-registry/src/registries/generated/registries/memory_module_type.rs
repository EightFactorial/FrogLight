//! @generated by `froglight-generator` #248246d

use bevy_reflect::Reflect;
use froglight_macros::FrogRegistry;

#[derive(Debug, Default, Clone, Copy, PartialEq, Eq, Hash, Reflect, FrogRegistry)]
pub enum MemoryModuleTypeKey {
    #[frog(key = "minecraft:dummy")]
    #[default]
    Dummy,
    #[frog(key = "minecraft:home")]
    Home,
    #[frog(key = "minecraft:job_site")]
    JobSite,
    #[frog(key = "minecraft:potential_job_site")]
    PotentialJobSite,
    #[frog(key = "minecraft:meeting_point")]
    MeetingPoint,
    #[frog(key = "minecraft:secondary_job_site")]
    SecondaryJobSite,
    #[frog(key = "minecraft:mobs")]
    Mobs,
    #[frog(key = "minecraft:visible_mobs")]
    VisibleMobs,
    #[frog(key = "minecraft:visible_villager_babies")]
    VisibleVillagerBabies,
    #[frog(key = "minecraft:nearest_players")]
    NearestPlayers,
    #[frog(key = "minecraft:nearest_visible_player")]
    NearestVisiblePlayer,
    #[frog(key = "minecraft:nearest_visible_targetable_player")]
    NearestVisibleTargetablePlayer,
    #[frog(key = "minecraft:walk_target")]
    WalkTarget,
    #[frog(key = "minecraft:look_target")]
    LookTarget,
    #[frog(key = "minecraft:attack_target")]
    AttackTarget,
    #[frog(key = "minecraft:attack_cooling_down")]
    AttackCoolingDown,
    #[frog(key = "minecraft:interaction_target")]
    InteractionTarget,
    #[frog(key = "minecraft:breed_target")]
    BreedTarget,
    #[frog(key = "minecraft:ride_target")]
    RideTarget,
    #[frog(key = "minecraft:path")]
    Path,
    #[frog(key = "minecraft:interactable_doors")]
    InteractableDoors,
    #[frog(key = "minecraft:doors_to_close")]
    DoorsToClose,
    #[frog(key = "minecraft:nearest_bed")]
    NearestBed,
    #[frog(key = "minecraft:hurt_by")]
    HurtBy,
    #[frog(key = "minecraft:hurt_by_entity")]
    HurtByEntity,
    #[frog(key = "minecraft:avoid_target")]
    AvoidTarget,
    #[frog(key = "minecraft:nearest_hostile")]
    NearestHostile,
    #[frog(key = "minecraft:nearest_attackable")]
    NearestAttackable,
    #[frog(key = "minecraft:hiding_place")]
    HidingPlace,
    #[frog(key = "minecraft:heard_bell_time")]
    HeardBellTime,
    #[frog(key = "minecraft:cant_reach_walk_target_since")]
    CantReachWalkTargetSince,
    #[frog(key = "minecraft:golem_detected_recently")]
    GolemDetectedRecently,
    #[frog(key = "minecraft:danger_detected_recently")]
    DangerDetectedRecently,
    #[frog(key = "minecraft:last_slept")]
    LastSlept,
    #[frog(key = "minecraft:last_woken")]
    LastWoken,
    #[frog(key = "minecraft:last_worked_at_poi")]
    LastWorkedAtPoi,
    #[frog(key = "minecraft:nearest_visible_adult")]
    NearestVisibleAdult,
    #[frog(key = "minecraft:nearest_visible_wanted_item")]
    NearestVisibleWantedItem,
    #[frog(key = "minecraft:nearest_visible_nemesis")]
    NearestVisibleNemesis,
    #[frog(key = "minecraft:play_dead_ticks")]
    PlayDeadTicks,
    #[frog(key = "minecraft:tempting_player")]
    TemptingPlayer,
    #[frog(key = "minecraft:temptation_cooldown_ticks")]
    TemptationCooldownTicks,
    #[frog(key = "minecraft:gaze_cooldown_ticks")]
    GazeCooldownTicks,
    #[frog(key = "minecraft:is_tempted")]
    IsTempted,
    #[frog(key = "minecraft:long_jump_cooling_down")]
    LongJumpCoolingDown,
    #[frog(key = "minecraft:long_jump_mid_jump")]
    LongJumpMidJump,
    #[frog(key = "minecraft:has_hunting_cooldown")]
    HasHuntingCooldown,
    #[frog(key = "minecraft:ram_cooldown_ticks")]
    RamCooldownTicks,
    #[frog(key = "minecraft:ram_target")]
    RamTarget,
    #[frog(key = "minecraft:is_in_water")]
    IsInWater,
    #[frog(key = "minecraft:is_pregnant")]
    IsPregnant,
    #[frog(key = "minecraft:is_panicking")]
    IsPanicking,
    #[frog(key = "minecraft:unreachable_tongue_targets")]
    UnreachableTongueTargets,
    #[frog(key = "minecraft:angry_at")]
    AngryAt,
    #[frog(key = "minecraft:universal_anger")]
    UniversalAnger,
    #[frog(key = "minecraft:admiring_item")]
    AdmiringItem,
    #[frog(key = "minecraft:time_trying_to_reach_admire_item")]
    TimeTryingToReachAdmireItem,
    #[frog(key = "minecraft:disable_walk_to_admire_item")]
    DisableWalkToAdmireItem,
    #[frog(key = "minecraft:admiring_disabled")]
    AdmiringDisabled,
    #[frog(key = "minecraft:hunted_recently")]
    HuntedRecently,
    #[frog(key = "minecraft:celebrate_location")]
    CelebrateLocation,
    #[frog(key = "minecraft:dancing")]
    Dancing,
    #[frog(key = "minecraft:nearest_visible_huntable_hoglin")]
    NearestVisibleHuntableHoglin,
    #[frog(key = "minecraft:nearest_visible_baby_hoglin")]
    NearestVisibleBabyHoglin,
    #[frog(key = "minecraft:nearest_targetable_player_not_wearing_gold")]
    NearestTargetablePlayerNotWearingGold,
    #[frog(key = "minecraft:nearby_adult_piglins")]
    NearbyAdultPiglins,
    #[frog(key = "minecraft:nearest_visible_adult_piglins")]
    NearestVisibleAdultPiglins,
    #[frog(key = "minecraft:nearest_visible_adult_hoglins")]
    NearestVisibleAdultHoglins,
    #[frog(key = "minecraft:nearest_visible_adult_piglin")]
    NearestVisibleAdultPiglin,
    #[frog(key = "minecraft:nearest_visible_zombified")]
    NearestVisibleZombified,
    #[frog(key = "minecraft:visible_adult_piglin_count")]
    VisibleAdultPiglinCount,
    #[frog(key = "minecraft:visible_adult_hoglin_count")]
    VisibleAdultHoglinCount,
    #[frog(key = "minecraft:nearest_player_holding_wanted_item")]
    NearestPlayerHoldingWantedItem,
    #[frog(key = "minecraft:ate_recently")]
    AteRecently,
    #[frog(key = "minecraft:nearest_repellent")]
    NearestRepellent,
    #[frog(key = "minecraft:pacified")]
    Pacified,
    #[frog(key = "minecraft:roar_target")]
    RoarTarget,
    #[frog(key = "minecraft:disturbance_location")]
    DisturbanceLocation,
    #[frog(key = "minecraft:recent_projectile")]
    RecentProjectile,
    #[frog(key = "minecraft:is_sniffing")]
    IsSniffing,
    #[frog(key = "minecraft:is_emerging")]
    IsEmerging,
    #[frog(key = "minecraft:roar_sound_delay")]
    RoarSoundDelay,
    #[frog(key = "minecraft:dig_cooldown")]
    DigCooldown,
    #[frog(key = "minecraft:roar_sound_cooldown")]
    RoarSoundCooldown,
    #[frog(key = "minecraft:sniff_cooldown")]
    SniffCooldown,
    #[frog(key = "minecraft:touch_cooldown")]
    TouchCooldown,
    #[frog(key = "minecraft:vibration_cooldown")]
    VibrationCooldown,
    #[frog(key = "minecraft:sonic_boom_cooldown")]
    SonicBoomCooldown,
    #[frog(key = "minecraft:sonic_boom_sound_cooldown")]
    SonicBoomSoundCooldown,
    #[frog(key = "minecraft:sonic_boom_sound_delay")]
    SonicBoomSoundDelay,
    #[frog(key = "minecraft:liked_player")]
    LikedPlayer,
    #[frog(key = "minecraft:liked_noteblock")]
    LikedNoteblock,
    #[frog(key = "minecraft:liked_noteblock_cooldown_ticks")]
    LikedNoteblockCooldownTicks,
    #[frog(key = "minecraft:item_pickup_cooldown_ticks")]
    ItemPickupCooldownTicks,
    #[frog(key = "minecraft:sniffer_explored_positions")]
    SnifferExploredPositions,
    #[frog(key = "minecraft:sniffer_sniffing_target")]
    SnifferSniffingTarget,
    #[frog(key = "minecraft:sniffer_digging")]
    SnifferDigging,
    #[frog(key = "minecraft:sniffer_happy")]
    SnifferHappy,
    #[frog(key = "minecraft:breeze_jump_cooldown")]
    BreezeJumpCooldown,
    #[frog(key = "minecraft:breeze_shoot")]
    BreezeShoot,
    #[frog(key = "minecraft:breeze_shoot_charging")]
    BreezeShootCharging,
    #[frog(key = "minecraft:breeze_shoot_recover")]
    BreezeShootRecover,
    #[frog(key = "minecraft:breeze_shoot_cooldown")]
    BreezeShootCooldown,
    #[frog(key = "minecraft:breeze_jump_inhaling")]
    BreezeJumpInhaling,
    #[frog(key = "minecraft:breeze_jump_target")]
    BreezeJumpTarget,
    #[frog(key = "minecraft:breeze_leaving_water")]
    BreezeLeavingWater,
}
