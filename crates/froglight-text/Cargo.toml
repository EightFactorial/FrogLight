[package]
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
name = "froglight-text"
readme = { workspace = true }
repository = { workspace = true }
version = { workspace = true }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints]
workspace = true

[dependencies]
bevy_platform = { workspace = true, features = ["alloc"] }
derive_more = { workspace = true }
froglight-common = { workspace = true }
froglight-nbt = { workspace = true, features = ["uuid"] }
parking_lot = { workspace = true }
smol_str = { workspace = true }
thiserror = { workspace = true }
uuid = { workspace = true }

# Optional dependencies
bevy_ecs = { workspace = true, optional = true }
bevy_reflect = { workspace = true, optional = true, features = ["smol_str"] }
froglight-io = { workspace = true, optional = true }
nu-ansi-term = { workspace = true, optional = true }
rsa = { workspace = true, optional = true, features = ["sha2"] }
serde = { workspace = true, optional = true, features = ["derive"] }
serde_json = { workspace = true, optional = true }

[features]
default = ["ansi", "crypto", "std"]

# Enable ANSI terminal support.
ansi = ["dep:nu-ansi-term", "std"]
# Enable chat message cryptography support.
crypto = ["dep:rsa"]
# Enable `froglight-io` support.
io = ["dep:froglight-io", "froglight-nbt/io", "std"]

# Enable `bevy` support.
bevy = ["dep:bevy_ecs", "dep:bevy_reflect", "froglight-common/bevy", "froglight-nbt/reflect"]
# Enable `serde` serialization support.
serde = [
  "bevy_platform/serialize",
  "dep:serde",
  "dep:serde_json",
  "froglight-common/serde",
  "froglight-io?/serde",
  "froglight-nbt/serde",
  "smol_str/serde",
  "uuid/serde",
]

# Enable nightly features.
nightly = ["froglight-io?/nightly", "froglight-nbt/nightly", "parking_lot/nightly"]

# Enable support for the rust standard library.
std = [
  "bevy_ecs?/std",
  "bevy_platform/std",
  "bevy_reflect?/std",
  "froglight-nbt/std",
  "rsa?/std",
  "serde?/std",
  "serde_json?/std",
  "uuid/std",
]
