[package]
name = "froglight-world"
version = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
authors = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
readme = { workspace = true }
exclude = ["benches"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints]
workspace = true

[dev-dependencies]
criterion = { workspace = true }
proptest = { workspace = true }

[dependencies]
bevy_app = { workspace = true }
bevy_ecs = { workspace = true }
bevy_log = { workspace = true }
bevy_reflect = { workspace = true }
bevy-inspector-egui = { workspace = true, optional = true }
bitvec = { workspace = true }
bytemuck = { workspace = true, features = [
    "nightly_stdsimd",
    "extern_crate_std",
] }
compact_str = { workspace = true }
derive_more = { workspace = true }
froglight-core = { version = "0.1.0", path = "../froglight-core" }
froglight-macros = { version = "0.1.0", path = "../froglight-macros", features = [
    "world",
] }
froglight-protocol = { version = "0.1.0", path = "../froglight-protocol", features = [
    "reflect",
] }
futures-lite = { workspace = true }
hashbrown = { workspace = true }
parking_lot = { workspace = true }
rangemap = { version = "1.5.1", features = ["nightly", "const_fn"] }
serde = { workspace = true }
simdnbt = { workspace = true }
strum = { workspace = true }
thiserror = { workspace = true }

[features]
default = []

# Enables custom reflect implementations
inspector = ["dep:bevy-inspector-egui"]

# Benchmark
[[bench]]
name = "chunk_decode"
path = "benches/chunk_decode.rs"
harness = false
